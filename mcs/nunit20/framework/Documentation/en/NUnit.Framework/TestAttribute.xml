<Type Name="TestAttribute" FullName="NUnit.Framework.TestAttribute">
  <TypeSignature Language="C#" Maintainer="auto" Value="public sealed class TestAttribute : Attribute" />
  <AssemblyInfo>
    <AssemblyName>nunit.framework</AssemblyName>
    <AssemblyPublicKey>
    </AssemblyPublicKey>
    <AssemblyVersion>2.1.4.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the &lt;link location="node:gtk-sharp/programming/threads"&gt;Gtk# Thread Programming&lt;/link&gt; for details.</ThreadSafetyStatement>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
    The Test attribute marks a specific method inside a class that has already been marked as a TestFixture, 
    as a test method.
    </summary>
    <remarks>
      <para>
    For backwards compatibility with previous versions of Nunit a test method will also be found if 
    the first 4 letters are "test" regardless of case.
    </para>
      <para>Note: The signature for a test method is defined as follows; public void MethodName()</para>
      <para>
    There must be no parameters. If the programmer marks a test method that does not have the correct signature it will 
    not be run and it will appear in the Test Not Run area in the UI that ran the program.
    </para>
      <example>
        <code lang="C#">
    using System;
    using NUnit.Framework;
  
    [TestFixture]
    public class SuccessTests
    {
            [Test] 
	    public void Add() { /* ... */ }

	    public void TestSubtract()
	    { 
	            /* backwards compatibility */ 
	    }
    }
    </code>
      </example>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TestAttribute ();" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>Flags a method to be a Test</summary>
        <remarks>To be added.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { set; get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <value>a <see cref="T:System.String" /></value>
        <remarks>To be added</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
  </Members>
</Type>
