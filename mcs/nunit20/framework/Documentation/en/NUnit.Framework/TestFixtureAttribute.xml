<Type Name="TestFixtureAttribute" FullName="NUnit.Framework.TestFixtureAttribute">
  <TypeSignature Language="C#" Maintainer="auto" Value="public sealed class TestFixtureAttribute : Attribute" />
  <AssemblyInfo>
    <AssemblyName>nunit.framework</AssemblyName>
    <AssemblyPublicKey>
    </AssemblyPublicKey>
    <AssemblyVersion>2.1.4.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the &lt;link location="node:gtk-sharp/programming/threads"&gt;Gtk# Thread Programming&lt;/link&gt; for details.</ThreadSafetyStatement>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=false, Inherited=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>This is the attribute that marks a class that contains test methods.</summary>
    <remarks>
      <para>
     This attribute is contained in the NUnit.Framework namespace. 
     In previous versions of NUnit the programmer was required to inherit from a class called TestCase. 
     This is more flexible because it allows a TestFixture attribute to be put on any class.
     </para>
      <para>
     Note: There are a few restrictions. The class must have a default constructor. 
     The class must also be a publicly exported type or the program that dynamically builds suites will not see it.
     </para>
      <example>
        <code lang="C#">
      using System;
      using NUnit.Framework;
  
      [TestFixture]
      public class SuccessTests { /* ... */ }
      </code>
      </example>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TestFixtureAttribute ();" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>Flags a class containing test methods</summary>
        <remarks>To be added.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { set; get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <value>a <see cref="T:System.String" /></value>
        <remarks>To be added</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
  </Members>
</Type>
