.TH "xbuild" 1
.SH NAME
xbuild \- Mono's tool to build MSBuild project files
.SH SYNOPSIS
.B xbuild
[option] [project-file]
.SH DESCRIPTION
xbuild can be used to build MSBuild project files. Integrated Development
Environments like MonoDevelop and "Microsoft Visual Studio .NET" use msbuild
project file format.

xbuild takes the path of the project or solution file to build, as the main argument.
If no file is specified then it tries to build any solution file or project file in
the current directory, that has a *proj extension.
.SH OPTIONS
.TP
.B \//target:T1[,TN]
List of targets to build
.TP
.B \//property:Name=Value
Set or override project properties
.TP
.B \//logger:<logger>
Custom logger to log build events
.TP
.B \//verbosity:<level>
Logger verbosity level : quiet, minimal, normal, detailed, diagnostic
.TP
.B \//validate
Validate the project file against the schema
.TP
.B \//validate:<schema>
Validate the project file against the specified schema
.TP
.B \//consoleloggerparameters:<params>
Parameters for the console logger : PerfomanceSummary, NoSummary, NoItemAndPropertyList
.TP
.B \//nologo
Don't show the initial xbuild banner
.TP
.B \//help
Show xbuild usage
.TP
.B \//version
Display xbuild version
.SH ENVIRONMENT VARIABLES
.TP
.I "XBUILD_EMIT_SOLUTION"
If this variable is set, then the project file generated from a solution
file is emitted.
.TP
.I "XBUILD_LOG_REFERENCE_RESOLVER"
References are resolved by trying a list of assembly search paths ($(AssemblySearchPaths)).
If xbuild is unable to resolve a reference, then it logs details of why the various
search paths failed. If this variable is set, then it logs the same even for references
that were resolved successfully. These logs show up if the verbosity is set to detailed
or higher.
.TP
.I "MSBuildExtensionsPath"
MSBuild extensions are usually installed in $(MSBuildExtensionsPath), which xbuild resolves
to $prefix/lib/mono/xbuild . When used in Import, like:

  <Import Project="$(MSBuildExtensionsPath)\\TestTargets.targets"/>

xbuild tries various values for the msbuild property $(MSBuildExtensionsPath), in order:

  1. Paths specified in the environment variable $MSBuildExtensionsPath.
  2. $XDG_CONFIG_HOME/xbuild/tasks (or Environment.SpecialFolder.ApplicationData)
  3. $prefix/lib/mono/xbuild (default location)

Anywhere else in the project files, $(MSBuildExtensionsPath) will always resolve to the default
location. This is a xbuild-only feature.
This is also applicable for the properties $(MSBuildExtensionsPath32) and $(MSBuildExtensionsPath64),
and the environment variables have the corresponding names - MSBuildExtensionsPath32/64 .
.TP
.I "XBUILD_COLORS"
If this variable is set, it contains a string of the form
"type=foreground,type=.." that specifies which color to use to display
errors/warnings etc on some terminals. Type here can be:

.nf
	errors, warnings, messages or events

	events: These are project/target/task start and end event
	        messages.
.fi

.Sp
The possible colors for foreground are:
.B black, red, brightred, green, brightgreen, yellow, brightyellow,
blue, brightblue, magenta, brightmagenta, cyan, brightcyan, grey,
white and brightwhite.

.Sp
For example, you could set this variable from your shell:
.nf
	export XBUILD_COLORS
	XBUILD_COLORS=errors=brightred,warnings=blue
.fi
.Sp

You can disable the built-in color scheme by setting this variable to
"disable".

.SH SEE ALSO
.BR mono(1), mcs(1)
.SH COPYRIGHT
Copyright (C) 2009 Novell, Inc (http://www.novell.com)
.SH MAILING LISTS
Visit http://lists.ximian.com/mailman/listinfo/mono-devel-list for details.
.SH WEB SITE
Visit: http://www.mono-project.com for details
